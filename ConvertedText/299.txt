Help:Template - Wikipedia Help:Template From Wikipedia, the free encyclopedia Jump to navigation Jump to search Main technical help page on templates For lists of commonly used templates, see Wikipedia:Template index. For a quick introduction to templates, see Help:A quick guide to templates. This help page is a how-to guide. It details processes or procedures of some aspect(s) of Wikipedia's norms and practices. It is not one of Wikipedia's policies or guidelines, and may reflect varying levels of consensus and vetting. Shortcuts H:T WP:TEMPLATE Wikitext Cheatsheet All Wikitext Visual files Sound files Tables Using templates Using HTML codes within Wikitext v t e A template is a Wikipedia page created to be included in other pages. Templates usually contain repetitive material that might need to show up on any number of articles or pages. They are commonly used for boilerplate messages, standardized warnings or notices, infoboxes, navigational boxes, and similar purposes. The most common method of inclusion is called transclusion, where the wikitext of the target page contains a reference to the template, using the {{Template name}} syntax. Another method is substitution, where the content of the template is copied into the wikitext of the target page, just once, when it is saved. Help:A quick guide to templates gives a brief introduction to the subject. There is further help from MediaWiki and Wikimedia at mw:Help:Templates, m:Help:Template, and m:Help:Advanced templates. Contents 1 Template link to template 2 General description 3 Usage syntax 3.1 Parameters 3.2 Calling 3.3 Substitution 4 Basic template usage examples 4.1 Examples with parameters 5 Usage hints and workarounds 6 Creating and editing templates 6.1 Handling parameters 6.1.1 Special case: parameters within an XML-style opening tag 6.1.2 Caution: overextending URLs 6.2 System variables and conditional logic 6.3 Nesting templates 6.4 Inclusion control: noinclude, includeonly, and onlyinclude 6.5 Problems and workarounds 6.6 Documentation 6.7 Categorization 6.7.1 Categorize pages by template inclusion 6.7.2 Categorize templates 6.8 Aliases 7 Template limits 8 Lua programming language 9 Template search 10 See also 11 Notes Template link to template To include the actual full name of the template as text (including the surrounding braces) in a Wikipedia article, apply the template link template. The primary motivation to do this is in instruction and documentation. A short example is the code: {{tl|foo}} generates {{foo}} General description Play media A basic overview of how templates work (8-minute video) Most templates are pages in the Template namespace, which means that they have titles in the form "Template:XXXX". It is possible, however, to transclude and substitute from any namespace,[a] and so some template pages are placed in other namespaces, such as the User namespace. Template pages have associated talk pages. Templates can contain any desired wikitext, including calls to other templates. They have some limited programming capacities: customizable values (called parameters); calculation and branchings (using parser functions); and access to wiki-specific variables (magic words), such as dates, times, and page names. They may also contain tags which define which parts of the wikitext are to be included when the template is transcluded or substituted. This means that the appearance of the template page itself need not be the same as that of the transcluded content (for example, it can contain documentation, categories, etc. for the template). How to do it: To transclude a template into an article or page, type {{Template name}} in the wikitext at the place where the template is to appear. The first letter may be indifferently lower- or upper-case. The prefix Template: before the template name is the default one and need not be included. However, for templates stored in other namespaces, the prefix, such as User:, must be specified. To transclude a page in mainspace, precede its title with a colon, as {{:Page name}}. Note: Attempting to transclude a template that does not exist produces a red link, just like linking to any other nonexistent page. Following the link allows one to create that particular template. It is not possible to transclude pages between projects (such as different-language Wikipedias or MediaWiki)???to use a template on another language project, a copy of the template must be created in that project. Usage syntax Parameters This section is about template parameters. For search parameters, see Help:Searching § Parameters. Further information: m:Help:Templates § Parameters Shortcuts H:PARAMETER WP:PARAMETER The basic transclusion syntax given above can be extended by the addition of parameters, which are used to control the template's output. The syntax for this is {{Template name|parameter|parameter|...}} where Template name is the name of the template, and each parameter may either contain just a value (these are called unnamed parameters) or be of the form name=value (named parameters). The first, second, third, etc. unnamed parameters will be given the names 1, 2, 3, etc. Whitespace characters (spaces, tabs, returns) are stripped from the beginnings and ends of named parameter names and values, but not from the middle: thus {{ ... | myparam = this is a test }} has the same effect as {{ ... |myparam=this is a test}}. This does not apply to unnamed parameters, where all whitespace characters are preserved. Which parameters (if any) can or should be passed to a template and how they are to be named depends on the coding of that template. Named parameters can be defined in any order. Superfluous or misnamed parameters will be ignored; undefined parameters will be assigned default values. If a parameter is defined more than once, the last value takes effect. The value of a parameter can be the empty string, such as when the pipe or equals sign is followed immediately by the next pipe or the closing braces. This is different from omitting the parameter altogether, which leaves it undefined, although templates are often coded so as to behave the same in both cases. Parameters can be specified (and will do nothing) even if not represented in the template's code. For example, |reason= is frequently used as a pseudo-parameter to explain briefly in the wikisource why the template was placed.[b] Some templates call Module:Check for unknown parameters to warn the editor if a parameter is being used that is not accounted for in the template's code; this is mostly used for infoboxes and other templates with a large number of complicated parameters, where the presence of an unknown one is usually an unintentional error. If you update such a template to include a new parameter, its call to the module must also be updated to include the new parameter. Calling Further information: mw:Help:Magic words Using a template is much like calling a function in a programming language ??? call it and it returns a value (the output). Like functions, some templates accept parameters that change the output. In MediaWiki, the wiki software that Wikipedia uses, variables have a more specific meaning that distinguishes them from templates, but they are both identified by double braces {{ }} and they both return a value. Whereas MediaWiki variable names are all uppercase, template names have the same basic features and limitations as all page names: they are case-sensitive (except for the first character); underscores are parsed as spaces; and they cannot contain any of these characters: # < > [ ] | { }. This is because those are reserved for wiki markup and HTML. The number sign # is called a fragment identifier because it denotes a fragment or section of a document (such as a section in a Wikipedia article). Although it can be used to link to a section of a template page (like Template:Portal#Example), there is no reason to put a fragment identifier or fragment name in a template reference. In {{Portal#Location|Books}}, for example, the string #Location has no purpose and is thus ignored. Substitution Further information: Help:Substitution When a template is substituted, its content is hard-coded in the page rather than transcluded. To learn how and when to substitute a template, see Help:Substitution. Basic template usage examples Note: If you wish to experiment with any of these, please use either the template sandbox, Special:ExpandTemplates or your user page or sandbox. An example of a very simple template can be found at Template:Lambda, which expands out to place the lambda symbol (?) at that point in the text. A programmer would say that the template returns the lambda symbol (?). Click on Template:Lambda, then click on the "Edit source" tab to see the template code (its wikitext). The "active" part of that code, called the expansion of the template, is the single word &lambda;.[c] The remainder of the wikitext is enclosed between <noinclude> tags so it is displayed on the template page itself but will not be displayed when the template is used (or called) on another page. To transclude Template:Lambda onto another page (i.e., to use it on another page), type {{lambda}} (or {{Lambda}} ??? the case of the first letter is not significant) into the wikitext of the target page and press Show preview. The page will be displayed with the template call replaced by the expansion of the template, as if the wikitext actually contained &lambda; at that point. The displayed page will therefore contain the text "?". For example, type The 11th letter of the Greek alphabet is the lambda ({{lambda}}) and you will see "The 11th letter of the Greek alphabet is the lambda (????)" when previewing the page or after saving the change. You can use templates without knowing the details of their code; you only need to remember what result they produce, which is usually described on the template page. Another way to use this template is to substitute it. If you type The 11th letter of the Greek alphabet is the lambda ({{subst:lambda}}) and preview or save the page, you will again see "The 11th letter of the Greek alphabet is the lambda (?)". If you look again at the saved wikitext,[d] however, you will see that the template calls really were replaced by the expansion of the template when you saved the page. The link between the output text and the template is now broken, and the output will not be affected by future changes to the template (as it would be in the case of transclusion). Examples with parameters An example of a template that takes parameters is the template {{about}}. Try typing {{about|how to use templates|how to use modules|Help:Module}} in the sandbox???it will produce the following text: This page is about how to use templates. For how to use modules, see Help:Module. The template {{about}} uses three unnamed parameters (also called positional parameters) in the example above, but the same template can also be used with different numbers of parameters to give slightly different results, as explained in the template's documentation. For example, {{about||how to use modules|Help:Module}}. Note the usage of an empty parameter???in this instance, the consecutive pipes mean that the first parameter that was "passed" to the template is an empty string, which in this template will cause it to omit the initial "about" sentence. This produces: For how to use modules, see Help:Module. Other templates, particularly more complex ones, take named parameters or a mixture of named and unnamed ones. A simple example is Template:Payoff matrix, used to generate a 2-by-2 grid. For example: Markup Renders as {{payoff matrix | UL = 5 | UR = 7 | DL = 2 | DR = 9 | Name = Example usage }} Left Right Up 5 7 Down 2 9 Example usage See the template page for more possibilities. Notice that the template is used here without defining all its possible parameters???undefined parameters are given default values. The spaces around the equal signs and before and after the parameters are used only for clarity???they are not needed and are ignored when the template is evaluated (although this is not the case with unnamed parameters). Parameter names are fully case-sensitive, though; for example, it is not possible to replace DR with dr or dR in the above example. Parameters with names that are not used by the template are simply ignored. Examining the source code of the template shows the standard table markup with some extra triple bracket entities representing the parameters: {| id="Payoff matrix" style="background:white; float: {{{Float|right}}}; clear:right; text-align:center;" align={{{Float|right}}} cellspacing=0 cellpadding=8 width={{{Width|225}}}
|-
|style="width:33%;                                                     "| 
|style="width:33%;                      border-bottom: solid black 1px;"| {{{2L|Left}}}
|style="width:33%;                      border-bottom: solid black 1px;"| {{{2R|Right}}}
|-
|style="border-right:  solid black 1px; text-align: right;             "| {{{1U|Up}}}
|style="border-right:  solid black 1px; border-bottom: solid black 1px; background:{{{ULc|white}}}; font-size:120%; "| {{{UL|0, 0}}}
|style="border-right:  solid black 1px; border-bottom: solid black 1px; background:{{{URc|white}}}; font-size:120%; "| {{{UR|0, 0}}}
|-
|style="border-right:  solid black 1px; text-align: right;             "| {{{1D|Down}}}
|style="border-right:  solid black 1px; border-bottom: solid black 1px; background:{{{DLc|white}}}; font-size:120%; "| {{{DL|0, 0}}}
|style="border-right:  solid black 1px; border-bottom: solid black 1px; background:{{{DRc|white}}}; font-size:120%; "| {{{DR|0, 0}}}
|-
|style="font-size: 90%;" colspan=3 |''{{{Name|{{PAGENAME}}}}}''
|}
 The entity {{{2L|Left}}} instructs the template to use the named parameter 2L or the text Left if the parameter is not present in the call. Usage hints and workarounds The following points may be worth noting when using templates: An unnamed parameter cannot contain an ordinary equals sign, as this would be interpreted as setting off a named parameter.[e] To pass an equals sign in an unnamed parameter (for example in a URL with attribute???value pairs), replace the equals sign with the special template {{=}}, which returns an equals sign that will not be interpreted. Another method is to replace the unnamed parameter (and any subsequent unnamed parameters) with named parameters???the first unnamed parameter is equivalent to a named parameter |1= and so on. To call template {{done}} with a=b as the literal value for the first parameter, type either {{done|a{{=}}b}} or {{done|1=a=b}}. Similarly, it is not possible to use an ordinary pipe character | in template parameters, as it will be interpreted as a separator.[f] This time, the problem can be solved by using the magic word {{!}} in place of the pipe, or???if the pipe is not intended to be parsed at a higher level???using the HTML entity &#124;. Alternatively, for embedding wikitables in templates, you may use {{Wikitable}} to avoid excessive {{!}}. Remember that whitespace characters (spaces, tabs, carriage returns, and line feeds) are not automatically stripped from the start and end of unnamed parameters, unlike with named parameters. Including such characters (or any other non-visible characters in any parameters) may in some cases affect the template's behaviour in unexpected ways. (Template designers can use {{Strip whitespace}} to remove unwanted whitespace in unnamed parameters.) In documentation and discussions, it is often convenient to be able to produce the template call syntax with a link to the template in question, but without actually calling the template. This can be done easily using the {{tl}} template (the "template link" template). For example, {{tl|Example}} produces {{Example}}. There are multiple other template-linking templates available with different functionalities. When a template is changed (when the template or one of its subtemplates is edited), the change will be reflected on all pages on which the template is transcluded. However, the change may not become visible on all pages immediately; a previously cached version of a page, based on the previous version of the template, may continue to be displayed for some time. Use the purge function to force a page to be displayed using the latest versions of templates???including on the template page itself, if it contains usage examples. When viewing old versions of pages, remember that templates will be transcluded as they are now, not necessarily as they were when the old page version was active. To list all pages onto which a template is transcluded, use What links here on the template page. This will not include pages where the template has been substituted. To get a list of templates transcluded on a page, click "Edit" and find the list below the edit window. This list also includes the subtemplates used by the templates that are directly transcluded. To get such a list for a page section, an old version of the page,[g] or your newly edited version prior to saving, click Show preview on the appropriate edit page. There are limits to the number and complexity of the templates that an article may have. See the "§ Expand limits" section for help in resolving this. If you want the template to leave a time stamp or signature, you can write <noinclude><nowiki></noinclude>~~~~~<noinclude></nowiki></noinclude>, but this will only work if you substitute the template. If you transclude it, you'll just get ~~~~~. To improve readability, usually programmers like to split the code with newlines and indent it. Unfortunately, MediaWiki software does not allow this functionality; in many instances, these purpose-built newlines are treated by the software as content. One possible workaround is to add <!-- before each newline character and --> after it, which produces an HTML comment. Creating and editing templates Templates are created and edited in much the same way as any other page: choose an appropriate name, navigate to that page, then click the "Edit" tab or create a new page as needed. As mentioned above, templates are normally placed in the Template namespace, though templates intended for your own personal use or for experimentation can be created in your own user space. Anything that can be included on a normal page or article can be included on a template, including other templates (called subtemplates). Templates often make use of programming features???parameters, parser functions, and other magic words???which allow the transcluded content to vary depending on context. There are also special tags to control which information is transcluded and which is not. Before creating a template, do a quick search for existing templates (such as by exploring Category:Wikipedia templates) to see if there is already a template that does what you want or a similar template whose code can be copied and modified (or left in place and expanded). Look for generic templates on which the new template can be based; for example, navbox templates can be easily created by calling the generic Template:Navbox. There is no hard rule about what name to choose for a template???make it short but reasonably descriptive. If similar templates exist, try to follow a consistent naming pattern. Templates can be renamed without breaking existing transclusions (what is called breakage), provided a redirect to the new template name is left behind. Be extremely careful when editing existing templates???changes made can affect a large number of pages, often in ways you might not expect. For this reason many high-use templates are protected against editing except by administrators and template editors; other editors can propose changes on the talk page. Some templates offer a sandbox and test cases for experimentation. To propose the deletion or merger of unused or inappropriate templates or templates that can easily be merged, go to Templates for discussion (TfD). Handling parameters The values of the parameters which can be fed to a template are represented in the template code by items enclosed between triple braces: The code {{{xxx}}} will be replaced by the value of the parameter named xxx. these are known as named parameters. The codes {{{1}}}, {{{2}}}, and so on will be replaced by the first, second, and so on unnamed parameter (or the value of a parameter named 1, 2, etc.); these are known as positional parameters. If a parameter is not assigned a value, then no replacement will take place; this means that if no value is passed for parameter |xxx=, the value of the expression {{{xxx}}} inside the template will literally be {{{xxx}}}, not the 'blank' you may have expected. A more intuitive behaviour can be achieved by specifying default parameter values. This is done with the pipe syntax: {{{xxx|dflt}}} specifies the default value dflt for the named parameter |xxx=, and {{{1|dflt}}} specifies the default value dflt for the first unnamed parameter. Most often, this is used to specify null default values, such as {{{1|}}} or {{{xxx|}}}. Parameter aliases are a special case of default values. For example, if parameters |1=, |text=, and |message= are names for the same parameter, then wikitext {{{message|{{{text|{{{1|}}}}}}}}} could be used. If more than one of those parameters are given, then message will have priority, followed by text, and finally by the first unnamed parameter. That is, if a template containing that wikitext is passed the parameters |message=A|text=B, the wikitext will expand to A. Because of the multiple uses of double-brace and triple-brace syntax, expressions can sometimes be ambiguous. It may be helpful or necessary to include spaces to resolve such ambiguity. For example, {{ {{{xxx}}} }} or {{{ {{xxx}} }}}, rather than typing five consecutive braces, may be more human-readable. However, watch out for unwanted whitespace appearing in template expansions. Special case: parameters within an XML-style opening tag Parameters do not get expanded when they are wrapped in <nowiki> tags. They aren't expanded either if placed within the actual XML-style opening tag. Thus, the following will not work within a template: <ref name={{{param}}}> Smith, Adam (1776)...</ref> because the parameter is not expanded. Instead, you can use the {{#tag:}} parser function, which is???for example???used in {{sfn}} to generate the <ref>...</ref> element; see also Help:Magic words § Formatting. Therefore, the following example will work: {{#tag:ref | Smith, Adam (1776)... | name={{{param}}} }} Caution: overextending URLs If a parameter's value is (or ends with) a URL, check whether it is displayed in Wikipedia with the link overextending by one or more characters after the URL so that clicking the link causes an error or failure. Ensure that, after processing by the software, a soft space (not a hard or non-breaking space) follows the URL, regardless of whether you or a user supplied the URL or whether it was generated by automated processing. Possibly, the source code could contain or generate a space that is discarded in the processing or there might not be any space there. Correct the source code, perhaps by forcing a soft space to appear after the URL. The {{spaces}} template may be useful. System variables and conditional logic Template code often makes use of the variables and parser functions described at Help:Magic words in order to make the template's behaviour depend on the environment (such as the current time or namespace) or on the parameter values that are passed to it. They can also be used for arithmetical calculations, but certain standard programming features such as loops and variable assignment are not available. Full string manipulation is also not available; some templates providing such functionality have been created, but they are inefficient and imperfect. Some of the most frequently used variables and functions are listed below. For more, see Help:Magic words and the fuller documentation at the MediaWiki pages mw:Help:Magic words and mw:Help:Extension:ParserFunctions. Examples of core parser functions Description Text entered Result Uppercasing text {{uc: Heavens to BETSY! }} HEAVENS TO BETSY! Lowercasing text {{lc: Heavens to BETSY! }} heavens to betsy! Getting a namespace name {{NS: 1 }} Talk Getting a Wikipedia URL {{fullurl: pagename }} //en.wikipedia.org/wiki/Pagename The ParserFunctions extension provides more programming-oriented parser functions. Examples of extension parser functions Description Text entered Result Testing for equality between two strings (or parameters) {{#ifeq: yes | yes | Hooray...! | Darn...! }} Hooray...! {{#ifeq: yes | no | Hooray...! | Darn...! }} Darn...! Testing whether a string (or parameter) contains anything (other than whitespace) {{#if: {{{param|}}} | Hooray...! | Darn...! }} Darn...! Making a calculation (mathematics) [area of circle of radius 4, to 3 decimal places] {{#expr: ( pi * 4 ^ 2 ) round 3 }} 50.265 Testing the result of a calculation [is 1230 even or odd?] {{#ifexpr: 1.23E+3 mod 2 | Odd | Even }} Even Examples of system variables Description Text entered Result (for this help page) Page names {{PAGENAME}} Template {{FULLPAGENAME}} Help:Template Name of the current namespace {{NAMESPACE}} Help Number of registered users {{NUMBEROFUSERS}} 41,867,382 Number of pages in a given category {{PAGESINCATEGORY:"Weird Al" Yankovic albums}} 20 Current software version {{CURRENTVERSION}} 1.37.0-wmf.12 (d4df395) Timestamp of last revision {{REVISIONTIMESTAMP}} 20210606150215 The {{PAGENAME}} and {{NAMESPACE}}variables are particularly useful, and frequently used, to change template behaviour based on context. For example, if the template transcludes a category link (e.g., cleanup templates, which transclude a link categorizing the page as a page which needs cleanup), it will often check the {{NAMESPACE}} variable to make sure that talk pages, user pages, or anywhere else the tag might incidentally be placed do not themselves get categorized as pages needing cleanup. Nesting templates Shortcut WP:NEST Templates may contain other templates???this is usually called nesting. As the template is processed, the wikitext produced by any nested templates is transcluded into the nesting template, so that the final product is essentially processed from the most deeply nested template out. While fairly straightforward in application, it involves some noteworthy quirks and tricks. To pass a parameter value to a nested template, place a parameter tag as the value of one of the nested template's parameters. Examples: Template:A contains "the quick brown {{B|{{{3}}} }} jumps over..." This takes the value passed to the third positional parameter of Template:A and passes it as the first positional parameter of Template:B, then returns the wikitext produced by B as part of the phrase. Template:A contains "the quick brown {{B|waldo={{{3}}} }} jumps over..." As previously, except the third positional parameter of Template:A is passed to the named parameter "waldo" of Template:B. Template parameters themselves can be chosen conditionally. Examples: Template:A contains the quick brown {{B|{{{3}}}=fox}} jumps over... Template:A passes the word "fox" as a named parameter of Template:B whose name is A's third positional parameter. {{#if: test string | value if test string is not empty | {{#if: test string | value if test string is not empty | value if test string is empty (or only white space) }} }} Shortcut WP:TEMPLATE LOOP A template can call itself but will stop after one iteration to prevent an infinite loop. When a nested template contains unmatched braces???as in {{lb}}}???the unmatched braces are treated as text during processing, and do not affect the parsing of braces in the nesting template. If the nested template is substituted, however, the substitution is processed first, and this will change how braces are parsed in the nesting template. This has little practical use, but can occasionally introduce unexpected errors. See meta:Help:Advanced templates and meta:Help:Recursive conversion of wikitext for more information. These pages also contain information on unusual calls such as {{template {{{parameter|}}} }}. Inclusion control: noinclude, includeonly, and onlyinclude Shortcuts WP:NOINCLUDE WP:INCLUDEONLY WP:ONLYINCLUDE By default, when a template is transcluded (or substituted), the entire wikitext (code) of the template page gets included in that of the target page. However, it is possible to modify that behaviour, using tags that specify which parts of the template code are to be included. This makes it possible to avoid transcluding information intended for display only on the template page itself, such as the template's {{documentation}}, categories, and interwiki links. It is also possible to have parts of the code be transcluded, but not be processed on the template page itself (e.g., categories to be applied to the target pages which do not apply to the template). The tags are as follows: <noinclude>...</noinclude> ??? The text between the tags will not be included when the template is transcluded (substituted), but will be processed on the template's page; a common use is for documentation in templates. <onlyinclude>...</onlyinclude> ??? This specifies that nothing on the page except what appears between the tags will be transcluded (substituted). <includeonly>...</includeonly> ??? The text between the tags will be transcluded (substituted), but will not be processed on the template's own page. Wikitext What is rendered here (source page) What is transcluded there (destination page) <noinclude> text1 </noinclude> text2 text1 text2 text2 <onlyinclude> text1 </onlyinclude> text2 text1 text2 text1 <includeonly> text1 </includeonly> text2 text2 text1 text2 <onlyinclude><includeonly> text1 </includeonly></onlyinclude> text2 text2 text1 Perhaps the most common issue with the use of these blocks is unwanted spaces or lines. It is important to remember that the effect of these tags begins immediately before the first angle bracket, not on the previous line or at the previous visible character; similarly the effect ends immediately after the last angle bracket, not on the next line or with the next visible character. For example: <includeonly> }}<includeonly> }} <includeonly> <noinclude> }}<noinclude> }} <noinclude> </includeonly><noinclude> {{template}}</includeonly><noinclude> {{template}}</includeonly> <noinclude> These tags can be nested inside each other, though (for a given page) this really only applies to the <onlyinclude> tag; nesting <includeonly> and <noinclude> tags is fairly pointless. Be careful to properly nest the tags, however. Constructions like <onlyinclude>abc<includeonly>def</onlyinclude>ghi</includeonly> will not work as expected. Use the "first opened, last closed" rule that is standard for HTML/XML. Problems and workarounds If the first character produced by a template or parser function is one of four wiki markup characters???:, ;, *, #[h]???then it is processed as though it were at the beginning of a line, even when the template tag is not. This allows the creation of various kinds of lists in templates where the template may not always be in the correct place for a list. To avoid this, either use <nowiki /> before the markup or use the HTML entities &#58;, &#59;, &#42;, and &#35; respectively. In some cases, the HTML entities will work when the <nowiki /> does not. The problem often occurs when a parameter value in a template call starts with one of the four characters. For issues involving the substitution of templates, such as how to control whether subtemplates are substituted as well when the parent template is substituted, see Help:Substitution. The template {{Strip whitespace}} can be used to strip any initial or final whitespace from unnamed parameter values if this would cause problems; named parameter values are automatically stripped in this way. For debugging templates, the following techniques are sometimes helpful: Use subst: to substitute a template (rather than transcluding it), which can show more clearly what is happening when the template is transcluded; see Help:Substitution. Use msgnw: (short for "message, nowiki") to more-or-less transclude the wikitext of the template page rather than the processed contents. It is not perfect: lists are rendered, comments are removed, and single newlines are replaced with spaces (which is particularly confounding when transcluding wikitext tables). Use Special:ExpandTemplates to see the full recursive expansion of one or more templates. To protect server resources and avoid infinite loops, the parser imposes certain limits on the depth transclusion nesting and on the page size with expanded templates. This may cause pages to break when using very complex templates, particularly if there are multiple such templates on the same page. For more information, see Wikipedia:Template limits. A page's overall load on the server can be checked by examining the generated HTML for a page and looking for the NewPP limit report comments. Do not use = wikimarkup to create section headers within a template which is intended for use in article space; this will create an [edit] link that, when transcluded, will confusingly open the template for editing. You may avoid [edit] links to the template by including <includeonly>__NOEDITSECTION__</includeonly>. Documentation Further information: Wikipedia:Template documentation Categorizing your template and documenting its proper usage will make it easier for other editors to find and use. Documentation for users, together with the template's categories, is normally placed after the template code, inside <noinclude>...</noinclude> tags. It is normally necessary to put the opening <noinclude> tag immediately after the end of the code, with no intervening spaces or newlines, to avoid transcluding unwanted whitespace. In the case of complex templates, the documentation (together with categories) is often kept on a separate subpage of the template page (named "Template:XXX/doc"). This also applies to many protected templates, which allows the information to be edited by non-administrators. This is achieved by placing the {{Documentation}} template after the main template code and within <noinclude>...</noinclude> tags. If the "/doc" subpage does not exist, a link will then appear enabling it to be created. Categorization See also: Wikipedia:Categorization § Template categorization Categorize pages by template inclusion Some templates contain category definitions in their transcluded code, since they are intended to place the target pages in particular categories. This is often done with maintenance categories (placing articles into ordinary content categories in this way is discouraged). When doing this, it may be necessary to use <includeonly>...</includeonly> tags to keep the template itself out of the category. While developing, testing, sandboxing, or demonstrating a template intended to apply a category, either temporarily replace each category with a test category (starting with X1, X2, or X3) or suppress categorization (see category suppression in templates). Categorize templates Categorization declaration [[Category:Some-topic templates]] should be placed on the template's documentation page (or inside <noinclude>...</noinclude> tags if there is no documentation page) to avoid polluting the transcluding pages. Aliases Aliases can be created with redirects. For example, Template:Tsh redirects to Template:Template shortcut. You can then write {{tsh|foo}} instead of {{Template shortcut|foo}}. It is good to prepare template aliases which only differ in whitespaces and capitalization. For example, there is a template called {{See Wiktionary}}. The "W" is capital, since the word "Wiktionary" is so, but a redirect {{See wiktionary}} with lower "w" exists because users may type the latter instead. Template limits Further information: Wikipedia:Template limits "Post-expand include size" limit. When templates are rendered or expanded to HTML for viewing in your browser, they use memory. This is called the "post-expand include size" and has a limit of 2,048,000 bytes. This size is included as an invisible comment in the HTML output???use your browser's view source feature to show the raw HTML and search for "newpp". The report will look like: <!--
NewPP limit report
Preprocessor node count: 2382/1000000
Post-expand include size: 63476/2048000 bytes
Template argument size: 9517/2048000 bytes
Expensive parser function count: 2/500
-->
 The example shows that template expansion is using 63,476 bytes out of 2,048,000 bytes of available memory. Display problem. If too many templates are included on a page, the post-expand include size may exceed the limit. When this happens, templates after the limit will no longer expand and will instead display as a wikilink (for example, Template:Template name). Common causes are the inclusion of too many citation templates and/or flag templates. To resolve this problem substitute templates, remove templates, or split the page. Non-rendered tranclusions still count towards limit. For example, a page which contains only {{#if:{{:Main Page}}}} would still have a post-expand include size even though it would have no output at all. The same applies to Scribunto modules. For example, {{#invoke:Test|main}} would still increase post-expand include size even if Module:Test were simply: mw.getCurrentFrame():preprocess "{{msgnw::Main Page}}" -- remove this line and post-expand include size becomes zero
return {main = function() end} -- p.main() has no return value
 Lua programming language Main page: Wikipedia:Lua Since February 2013, the Lua programming language is available for use through the Scribunto MediaWiki extension. Lua code can be embedded into templates by employing the {{#invoke:}} functionality of the Scribunto MediaWiki extension. The Lua source code is stored in pages called modules, and these individual modules are then invoked on template pages. For example, Module:Example can be invoked using the code {{#invoke:Example|hello}} to print the text "Hello World!". Template search Main page: Wikipedia:Template index As an alternative to using this index linked above, you can search the Template namespace using the Special:Search box below: See also Help pages Manual pages Special pages Other pages not for direct viewing Wikipedia:Advanced template coding m:Help:Template meta:User:Happy-melon/Templates m:Help:Advanced templates Introductions: Transclusion Help:A quick guide to templates mw:Help:Templates Help:Metatemplating Help:Calculation Wikipedia:Template messages Help:Magic words mw:Help:Magic words mw:Help:Extension:ParserFunctions m:Help:Parameter default Help:Substitution Wikipedia:Template documentation Wikipedia:Template namespace Wikipedia:Template limits Wikipedia:Template sandbox and test cases Wikipedia:WikiProject Templates Wikipedia:TemplateData, the standardized description of a template, used by VisualEditor Interwiki transclusion mw:Extension:ExpandTemplates mw:Manual:Parser.php Wikipedia:Database reports/Templates transcluded on the most pages???shows the number of pages in which each template is transcluded, not counting transclusions through redirects Special:Unusedtemplates???templates which are not transcluded (however, they may be used for substitution) Special:Allpages (namespace 10) all templates on this server Special:ExpandTemplates Multilingual portal pages, see meta:www CSS and JS pages, see Help:User style Pages in the MediaWiki namespace, see Help:System message Wikipedia:Book sources, used by Special:Booksources m:Spam blacklist Template:Example Notes ^ Namespaces from which transclusion is not allowed are specified on a wiki by the variable $wgNonincludableNamespaces. ^ Some templates, such as {{Requested move}}, have code to display |reason= as visible output; whether to do so is determined on a template-by-template basis. ^ &lambda; is the HTML character entity for the Greek letter (?). ^ Since the new wikitext itself needs to be reviewed, and new wikitext itself cannot be previewed during source editing, previewing the page will not illustrate the result of the template substitution in the wikitext. ^ This does not apply if the equals sign comes within another template call or other item which the parser handles separately. ^ Again, this does not apply if it comes within another separately parsed item, such as a piped wikilink. ^ For an old version, the subtemplate tree will be constructed according to the templates' current state. ^ These are defined in the doBlockLevels function of Parser.php. v t e Wikipedia templates Main namespace General Cleanup Verifiability and sources Disputes Hatnotes Infoboxes Links External link templates Linking country articles Lists Main page Section Sources of articles Quick reference Standard boxes Stub types Translation Other namespaces Compact TOC Category File Talk Template User Userboxes User talk Wikipedia WikiProject banners All namespaces Deletion (Speedy) Formatting Maintenance Merging Moving Requested Navigation Redirect pages Functional index Language codes Splitting Wikimedia sister projects Navboxes with templates Archive Articles for deletion Birth, death and age Button Category header Citation and verifiability Citation Style 1 Deletion review Editnotice Hatnotes Help desk Inline cleanup Introduction cleanup IPA Math Notice and warnings Organization infoboxes Proposed article mergers Protection Quotation Redirects Search Semantics Speedy deletion Notices String-handling Sup and sub-related Top icon Transwiki maintenance Unicode User talk pages User noticeboard notices Userboxes User rights Userspace linking Userspace Disclaimers Wikibreak WikiLove Inline images Wikipedia icons Discussion icons Comment icons Emoji Related topics Template documentation Examples of templates Maintenance template removal Requested templates WikiProject Templates Template help Template namespace Search Category v t e Wikipedia technical help Get personal technical help at the Teahouse, Help desk, Village pump (technical), talk pages or IRC. General technical help Browser notes Bypass cache Keyboard shortcuts Troubleshooting Editing CharInsert Edit conflict Edit toolbar Reverting How to create a page IRC Tutorial Mobile access Multilingual support Page history Page information Page name Help Printing Software notices Editnotice Special Characters Entering User access levels VisualEditor User guide Special page-related Special page help Edit filter Emailing users Logging in Reset passwords Logs Moving a page Fixing cut-and-paste moves Notifications/Echo FAQ Page Curation Page import Pending changes Random pages Recent changes Related changes Searching Linksearch Tags User contributions Watchlist What links here Wikitext Wikitext Cheatsheet Columns Line-break handling Lists Magic words For beginners Conditional expressions Switch parser function Time function Redirects Sections and TOCs Tables Introduction Basics Advanced table formatting Collapsing Conditional tables Sorting Using colours Links and diffs Links Interlanguage Interwiki Permanent Diffs Simplest diff guide Simple diff and link guide Complete diff and link guide Colon trick Link color Pipe trick URLs Media files: images, videos and sounds Media help Files Creation and usage Moving files to Commons Images Introduction to images Picture tutorial Preparing images for upload Uploading images Options to hide an image Extended image syntax SVG help Gallery tag Graphics tutorials Basic bitmap image editing How to improve image quality Graphics Lab resources Sound file markup Visual file markup Other graphics Family trees Graphs and charts How to create Barcharts To scale charts Math formulas Math symbols LaTeX symbols Rendering math Musical scores Musical symbols Timeline EasyTimeline syntax WikiHiero syntax Templates and Lua modules Templates Advanced template coding Template documentation Template index Template limits Template sandbox and test cases Citation templates Lua help Lua project Resources To do Substitution Purge Job queue Transclusion Labeled section Guide to Scribbling Data structure Namespaces Main/Article Category Draft File File description page Help Portal Project/Wikipedia Talk Archiving Template User User page design MediaWiki Bug reports and feature requests System message TimedMediaHandler extension Module Special HTML and CSS Cascading Style Sheets HTML in wikitext Catalogue of CSS classes Common.js and common.css User CSS for monospaced coding font Classes in microformats Markup validation Span tags Useful styles Customisation and tools Preferences Gadgets Skins Citation tools Cleaning up vandalism tools Customizing watchlists Hide pages IRC Scripts User scripts Guide Techniques User style Tools Alternative browsing Browser tools Editing tools Navigation shortcuts Optimum tool set Wikimedia Cloud Services Beta Features at MediaWiki Automated editing AfC helper script AutoWikiBrowser Bots Creating HotCat Huggle Navigation popups RedWarn Twinkle WPCleaner Inactive igloo STiki See also: Category:Wikipedia how-to Category:Wikipedia information pages Further navigation at: Help pages Administrators Accessibility Accounts Bots Referencing Citation metadata Templates User scripts Retrieved from "https://en.wikipedia.org/w/index.php?title=Help:Template&oldid=1027175823" Categories: Wikipedia how-to Wikipedia template help Hidden categories: Help pages with short description Wikipedia semi-protected project pages Navigation menu Personal tools Not logged in Talk Contributions Create account Log in Namespaces Help page Talk Variants Views Read View source View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Print/export Download as PDF Printable version In other projects Wikimedia Commons MediaWiki Meta-Wiki Wikibooks Wikiquote Wikisource Wikiversity Languages Alemannisch ????????? ????????? ?????? ??????????????? ??????????? Català ??etina Dansk Deutsch Dolnoserbski Eesti Español Esperanto Euskara ??????? Français Galego ??????? ????????? ???????? Hornjoserbsce Ilokano Bahasa Indonesia ??slenska Italiano ??????? Jawa Lëtzebuergesch Lietuvi? ??????? Malti ?????? Bahasa Melayu ?????????????????????????????? Nederlands Nedersaksies ???????? Norsk bokmål Occitan ??????? ??????????????????????????? Ripoarisch Român?? ?????????? Scots Shqip ????????? Simple English ??????? ??????? ???????? / srpski Srpskohrvatski / ????????????????????? Suomi ??????????/tatarça ??????????????????????????? ?????????? ????? Türkçe ?????????????? ????? Vèneto Ti?ng Vi??t ?????????? Zazaki ???? Edit links This page was last edited on 6 June 2021, at 15:02 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement